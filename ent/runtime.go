// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/jason-shen/gopush/ent/schema"
	"github.com/jason-shen/gopush/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescApikey is the schema descriptor for apikey field.
	userDescApikey := userFields[5].Descriptor()
	// user.DefaultApikey holds the default value on creation for the apikey field.
	user.DefaultApikey = userDescApikey.Default.(func() uuid.UUID)
	// userDescActivated is the schema descriptor for activated field.
	userDescActivated := userFields[8].Descriptor()
	// user.DefaultActivated holds the default value on creation for the activated field.
	user.DefaultActivated = userDescActivated.Default.(bool)
	// userDescLocked is the schema descriptor for locked field.
	userDescLocked := userFields[9].Descriptor()
	// user.DefaultLocked holds the default value on creation for the locked field.
	user.DefaultLocked = userDescLocked.Default.(bool)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[10].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[11].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
